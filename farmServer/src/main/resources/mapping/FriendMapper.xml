<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fngame.farm.mapper.FriendMapper">
    <resultMap id="BaseResultMap" type="com.fngame.farm.model.Friend">
        <id column="ID" property="id" jdbcType="BIGINT"/>
        <result column="userid" property="userid" jdbcType="BIGINT"/>
        <result column="friendid" property="friendid" jdbcType="BIGINT"/>
        <result column="agree" property="agree" jdbcType="INTEGER"/>
        <result column="nickname" property="nickname" jdbcType="VARCHAR"/>
        <result column="headurl" property="headurl" jdbcType="VARCHAR"/>
        <result column="sex" property="sex" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    ID, userid, friendid, agree, nickname, headurl, sex
  </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.fngame.farm.model.FriendExample">
        select
        <if test="distinct">
            distinct
        </if>
        'true' as QUERYID,
        <include refid="Base_Column_List"/>
        from fm_friend
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from fm_friend
        where ID = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from fm_friend
    where ID = #{id,jdbcType=BIGINT}
  </delete>
    <delete id="deleteByExample" parameterType="com.fngame.farm.model.FriendExample">
        delete from fm_friend
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.fngame.farm.model.Friend">
    insert into fm_friend (ID, userid, friendid, 
      agree, nickname, headurl, 
      sex)
    values (#{id,jdbcType=BIGINT}, #{userid,jdbcType=BIGINT}, #{friendid,jdbcType=BIGINT}, 
      #{agree,jdbcType=INTEGER}, #{nickname,jdbcType=VARCHAR}, #{headurl,jdbcType=VARCHAR}, 
      #{sex,jdbcType=INTEGER})
  </insert>
    <insert id="insertSelective" parameterType="com.fngame.farm.model.Friend">
        insert into fm_friend
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                ID,
            </if>
            <if test="userid != null">
                userid,
            </if>
            <if test="friendid != null">
                friendid,
            </if>
            <if test="agree != null">
                agree,
            </if>
            <if test="nickname != null">
                nickname,
            </if>
            <if test="headurl != null">
                headurl,
            </if>
            <if test="sex != null">
                sex,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="userid != null">
                #{userid,jdbcType=BIGINT},
            </if>
            <if test="friendid != null">
                #{friendid,jdbcType=BIGINT},
            </if>
            <if test="agree != null">
                #{agree,jdbcType=INTEGER},
            </if>
            <if test="nickname != null">
                #{nickname,jdbcType=VARCHAR},
            </if>
            <if test="headurl != null">
                #{headurl,jdbcType=VARCHAR},
            </if>
            <if test="sex != null">
                #{sex,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.fngame.farm.model.FriendExample" resultType="java.lang.Integer">
        select count(*) from fm_friend
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <select id="getID" resultType="java.lang.Long">
  SELECT MAX(id) FROM fm_friend
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update fm_friend
        <set>
            <if test="record.id != null">
                ID = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.userid != null">
                userid = #{record.userid,jdbcType=BIGINT},
            </if>
            <if test="record.friendid != null">
                friendid = #{record.friendid,jdbcType=BIGINT},
            </if>
            <if test="record.agree != null">
                agree = #{record.agree,jdbcType=INTEGER},
            </if>
            <if test="record.nickname != null">
                nickname = #{record.nickname,jdbcType=VARCHAR},
            </if>
            <if test="record.headurl != null">
                headurl = #{record.headurl,jdbcType=VARCHAR},
            </if>
            <if test="record.sex != null">
                sex = #{record.sex,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update fm_friend
        set ID = #{record.id,jdbcType=BIGINT},
        userid = #{record.userid,jdbcType=BIGINT},
        friendid = #{record.friendid,jdbcType=BIGINT},
        agree = #{record.agree,jdbcType=INTEGER},
        nickname = #{record.nickname,jdbcType=VARCHAR},
        headurl = #{record.headurl,jdbcType=VARCHAR},
        sex = #{record.sex,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.fngame.farm.model.Friend">
        update fm_friend
        <set>
            <if test="userid != null">
                userid = #{userid,jdbcType=BIGINT},
            </if>
            <if test="friendid != null">
                friendid = #{friendid,jdbcType=BIGINT},
            </if>
            <if test="agree != null">
                agree = #{agree,jdbcType=INTEGER},
            </if>
            <if test="nickname != null">
                nickname = #{nickname,jdbcType=VARCHAR},
            </if>
            <if test="headurl != null">
                headurl = #{headurl,jdbcType=VARCHAR},
            </if>
            <if test="sex != null">
                sex = #{sex,jdbcType=INTEGER},
            </if>
        </set>
        where ID = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.fngame.farm.model.Friend">
    update fm_friend
    set userid = #{userid,jdbcType=BIGINT},
      friendid = #{friendid,jdbcType=BIGINT},
      agree = #{agree,jdbcType=INTEGER},
      nickname = #{nickname,jdbcType=VARCHAR},
      headurl = #{headurl,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=INTEGER}
    where ID = #{id,jdbcType=BIGINT}
  </update>
</mapper>